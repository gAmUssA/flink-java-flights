name: Smoke Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v2

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3

    - name: Build with Gradle
      run: ./gradlew build -x test
      
    - name: Run unit tests
      run: ./gradlew test

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: build/reports/tests/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: build/libs/

  smoke-test:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: build/libs/
        
    - name: Set up Docker
      uses: docker/setup-buildx-action@v3
        
    - name: Start Kafka container
      run: |
        docker run -d \
          --name kafka \
          -p 9092:9092 \
          -e KAFKA_PROCESS_ROLES=broker,controller \
          -e KAFKA_NODE_ID=1 \
          -e KAFKA_CONTROLLER_QUORUM_VOTERS=1@localhost:9093 \
          -e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093 \
          -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092 \
          -e KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT \
          -e KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER \
          -e KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1 \
          -e KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1 \
          -e KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1 \
          apache/kafka:4.0.0
        
        # Wait for Kafka to start
        sleep 10
        
        # Create required topics
        docker exec kafka /opt/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --create --topic flight-events --partitions 1 --replication-factor 1
        docker exec kafka /opt/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --create --topic flight-alerts --partitions 1 --replication-factor 1

    - name: Run smoke test
      run: |
        # Run the application with smoke test flag
        echo "Starting application in smoke test mode..."
        java -jar build/libs/*.jar --smoke-test &
        APP_PID=$!
        
        # Wait for the application to complete its smoke test
        # The application now has built-in sleep for smoke test mode
        echo "Waiting for smoke test to complete..."
        wait $APP_PID
        EXIT_CODE=$?
        
        if [ $EXIT_CODE -eq 0 ]; then
          echo "✅ Smoke test completed successfully"
          exit 0
        else
          echo "❌ Smoke test failed with exit code: $EXIT_CODE"
          exit 1
        fi
      
    - name: Clean up
      if: always()
      run: |
        docker stop kafka
        docker rm kafka
